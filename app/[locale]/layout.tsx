
import { NextIntlClientProvider, hasLocale } from 'next-intl'
import type { Metadata } from "next";
import { Roboto_Condensed, Geist_Mono, Public_Sans, Lexend_Exa, Roboto } from "next/font/google";
import { Header } from "@/components/Header"
import { Footer } from "@/components/Footer"
import { notFound } from 'next/navigation'
import { routing } from '../../i18n/routing';
import { getTranslations } from 'next-intl/server'
import "../globals.css";

const PublicSans = Public_Sans({
  variable: "--font-Public-Sans",
  subsets: ["latin"],
});

const RecursiveFont = Lexend_Exa({
  variable: "--font-Recursive",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

const RobotoFont = Roboto({
  variable: "--font-Roboto",
  subsets: ["latin"],
});

const RobotoCondensed = Roboto_Condensed({
  variable: "--font-Roboto-Condensed",
  subsets: ["latin"],
});

// export const metadata: Metadata = {
//   title: "东莞市金久自动化科技有限公司",
//   description: "Generated by create next app",
// };

// meta data
export async function generateMetadata({ params }: { params: { locale: string } }): Promise<Metadata> {
  const { locale } = await params;
  const t = await getTranslations({ locale: locale })
  return {
    title: t('company.welcome'),
    description: '',
    icons: "/favicon.ico"
  };
}

export default async function RootLayout({
  children,
  params,
}: Readonly<{
  children: React.ReactNode,
  params: Promise<{ locale: string }>;
}>) {
  const { locale } = await params;
  if (!hasLocale(routing.locales, locale)) {
    notFound();
  }

  return (
    <html lang={locale}>
      <body
        className={`${RobotoCondensed.variable} ${RobotoFont.variable} ${PublicSans.variable} ${RecursiveFont.variable} ${geistMono.variable} antialiased`}
      >
        <NextIntlClientProvider>
          <Header />
          <main className="flex-1 mt-15 md:mt-30">{children}</main>
          <Footer />
        </NextIntlClientProvider>
      </body>
    </html>
  );
}
